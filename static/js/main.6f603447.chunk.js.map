{"version":3,"sources":["components/Videos.js","reactyoutube.js","components/Header.js","components/Video.js","components/Description.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["videos","YoutubeVideo","videoId","id","className","opts","height","width","playerVars","autoplay","Header","onClick","document","getElementById","style","display","console","log","Video","video","onChange","snippet","resourceId","title","description","scrollIntoView","behavior","k","revealVideos","src","thumbnails","high","url","alt","publishedAt","Videos","set","items","map","error","videoName","videoDescription","Footer","dotenv","config","data","App","useState","setVideos","currentVideo","setCurrentVideo","setVideoName","setVideoDescription","useEffect","a","fetchVideos","fetchedData","getVideos","fetch","process","res","json","setVideo","VdESCRIPTION","Description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6f603447.chunk.js","sourcesContent":["import Video from './Video';\nlet videos;\nconst Videos = ({ set, onChange}) =>{\n    try{\n        \n        videos = set.items.map((k)=>(\n            <Video video={k} onChange={onChange} />\n        ))\n    }catch(error){\n\n    }\n    return (\n      <div id=\"videos\" className=\"flex-none float-right items-center h-full overflow-y-scroll\">\n        {videos}\n      </div>\n    )\n}\nexport default Videos;","import React from 'react';\nimport YouTube from 'react-youtube';\n\nconst YoutubeVideo = ({ videoId }) =>{\n  const opts = {\n          height: '390',\n          width: '100%',\n          playerVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 1,\n          },\n        };\n  return (\n    <YouTube id=\"videoPlayer\" className=\"row-span-2\" videoId={videoId} opts={opts} />\n  )\n}\nexport default YoutubeVideo;","const Header = () =>{\n\n    return (\n       <div id=\"top\" className=\"px-10\">\n            <p className=\"sticky text-6xl\">VIDEO<span className=\"text-indigo-700 font-bold\">gallery</span></p>\n            <h1 className=\"font-light text-indigo-500 \">Get exclusive playlist videos</h1>\n            <button id=\"btn\" className=\"bg-indigo-700 text-gray-100 px-4 py-2 uppercase font-medium focus:outline-none\" onClick={()=>{\n                document.getElementById('videos').style.display = \"flex\";\n                console.log('Clicked');\n            }}>Playlist</button>\n            \n       </div>\n    )\n}\nexport default Header;","const Video = ({ video, onChange}) =>{\n    console.log(video);//playVideo={setVideo(k.snippet.resourceId.videoId)}\n    const revealVideos = () =>{\n        const k = document.getElementById(\"videos\");\n        if(k.style.display == \"none\"){\n            k.style.display = \"block\";\n        }else{\n            k.style.display = \"none\";\n        }\n    }\n    return (\n        <div className=\"smv flex mt-4 mx-w-auto  rounded-xl shadow-md space-x-4\"  onClick={()=>{\n            onChange(video.snippet.resourceId.videoId, `${video.snippet.title}`, video.snippet.description);\n            const player = document.getElementById('top');\n            player.scrollIntoView({ behavior: `smooth`});\n            revealVideos();\n        }}>\n            <img className=\"h-40 w-40\" src={`${video.snippet.thumbnails.high.url}`} alt=\"\"/>\n            <div>\n            <p className=\"relative mx-w-auto w-full text-xl text-indigo-700 font-medium\">{`${video.snippet.title}`}</p> \n            <p className=\"text-gray-500\">{`${video.snippet.publishedAt}`}</p>\n            </div>\n           \n            \n        </div>\n    )\n}\nexport default Video;","const description = ({ videoName, videoDescription }) =>{\n    return (\n       <div>\n           <p className=\"text-xl font-medium text-indigo-700 mt-4\">{videoName}</p>\n           <p className=\"text-gray-500 mt-2 font-light\">{videoDescription}</p>\n       </div>\n    )\n}\nexport default description;","const Footer = () =>{\n    return(\n        <div className=\"bg-purple-700 w-full px-10 py-20\">\n        <p className=\"text-xl text-white\">VIDEO<span className=\" font-bold\">gallery</span></p>\n        <p className=\"text-gray-100 mt-2 font-light leading-4 text-xl\">Get the official YouTube app on Android phones and tablets. See what the world is watching -- from the hottest music videos to what’s popular in gaming, fashion, beauty, news, learning and more. Subscribe to channels you love, create content of your own, share with friends, and watch on any device.</p>\n        <p className=\"text-center text-white mt-4\">&#169; 2021 ISHIMWE Bernard</p>\n        <p className=\"text-center text-indigo-100\">All rights reserved</p>\n        </div>\n    )\n}\nexport default Footer;","import ReactYoutube from './reactyoutube.js';\nimport { useEffect, useState } from 'react';\nimport dotenv from 'dotenv';\nimport Header from './components/Header';\nimport Videos from './components/Videos'\nimport Description from './components/Description'\nimport Footer from './components/Footer'\n\ndotenv.config();\nconst YOUTUBE_PLAYLIST_ITEMS = \"https://www.googleapis.com/youtube/v3/playlistItems\";\nlet data;\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  const [currentVideo, setCurrentVideo] = useState('nQWFzMvCfLE');\n  const [videoName, setVideoName] = useState('What a beautiful Name Hillsong');\n  const [videoDescription, setVideoDescription] = useState(`\"What A Beautiful Name\" from the album 'let there be light'' recorded live at ‪Hillsong Conference in Sydney, 2016. ** Scriptural Inspiration Behind the Lyrics** https://goo.gl/N5M5Qh ** Song Story From Brooke Ligertwood** https://goo.gl/OqOJxU **Subscribe to our YouTube channel** http://smarturl.it/HillsongWorshipSub Click here to listen to the latest from Hillsong Worship: https://hillsong.lnk.to/ytplaylist Stay connected: Instagram: https://instagram.com/hillsongworship Facebook: https://facebook.com/hillsongworship Twitter: https://twitter.com/hillsongworship Website: https://hillsong.com/worship What A Beautiful Name Words and Music by Ben Fielding & Brooke Ligertwood © 2016 Hillsong Music Publishing. CCLI: 7068424 VERSE 1: You were the Word at the beginning One with God the Lord Most High Your hidden glory in creation Now revealed in You our Christ CHORUS 1: What a beautiful Name it is What a beautiful Name it is The Name of Jesus Christ my King What a beautiful Name it is Nothing compares to this What a beautiful Name it is The Name of Jesus VERSE 2: You didn’t want heaven without us So Jesus You brought heaven down My sin was great Your love was greater What could separate us now CHORUS 2: What a wonderful Name it is What a wonderful Name it is The Name of Jesus Christ my King What a wonderful Name it is Nothing compares to this What a wonderful Name it is The Name of Jesus What a wonderful Name it is The Name of Jesus BRIDGE: Death could not hold You The veil tore before You You silence the boast of sin and grave The heavens are roaring The praise of Your glory For You are raised to life again You have no rival You have no equal Now and forever God You reign Yours is the kingdom Yours is the glory Yours is the Name above all names CHORUS 3: What a powerful Name it is What a powerful Name it is The Name of Jesus Christ my King What a powerful Name it is Nothing can stand against What a powerful Name it is The Name of Jesus TAGS: What a powerful Name it is The Name of Jesus What a powerful Name it is The Name of Jesus #whatabeautifulname #hillsongworship #lettherebelight`);\n  useEffect(()=>{\n    const getVideos = async()=>{\n      const fetchedData = await fetchVideos();\n      setVideos(fetchedData);\n    }\n    getVideos();\n    }, []); \n    const fetchVideos = async()=>{\n      const res = await fetch(`${YOUTUBE_PLAYLIST_ITEMS}?part=snippet&maxResults=50&playlistId=PLWvahZRxLnLPV5ECCHvmLuus6Tjmv4Oir&key=${process.env.REACT_APP_GOOGLE_APIS_KEY}`);\n       data = await res.json();\n      return data.items;\n    };\n    const playThisVideo = (video, videoName, videoDescription) =>{\n      setCurrentVideo(video);\n      setVideo(videoName, videoDescription);\n    }\n    const setVideo = (videoName, VdESCRIPTION) =>{\n      setVideoName(videoName);\n      setVideoDescription(VdESCRIPTION)\n    }\n\n  return (\n    <div id=\"whole\"  className=\"w-full max-w-full\">\n    <div id=\"filler\"> </div>\n    <Header className=\"header\" />\n    <div id=\"app\" className=\"space-x-4 w-full\">\n    <div className=\"py-2\">\n    <ReactYoutube className=\"\"  videoId={currentVideo}/>\n    <Description  videoName={videoName} videoDescription={videoDescription}/>\n    </div>\n    <Videos  set={data} onChange={playThisVideo} />\n \n    </div>\n    <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}