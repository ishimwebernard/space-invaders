{"version":3,"sources":["components/Videos.js","reactyoutube.js","components/Header.js","components/Video.js","App.js","reportWebVitals.js","index.js"],"names":["videos","Example","videoId","opts","height","width","playerVars","autoplay","onReady","this","_onReady","event","target","pauseVideo","React","Component","Header","className","Video","video","console","log","src","snippet","thumbnails","high","url","alt","title","publishedAt","Videos","set","items","map","k","error","dotenv","config","data","App","useState","setVideos","useEffect","a","fetchVideos","fetchedData","getVideos","fetch","process","res","json","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uJACIA,E,oHCqBWC,E,4JAlBb,WAUE,OAAO,cAAC,IAAD,CAASC,QAAQ,cAAcC,KATzB,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,IAIoCC,QAASC,KAAKC,a,sBAGlE,SAASC,GAEPA,EAAMC,OAAOC,iB,GAhBKC,IAAMC,W,QCEbC,EALA,WACX,OACI,oBAAGC,UAAU,MAAb,kBAAwB,+CCWjBC,EAbD,SAAC,GAAc,IAAZC,EAAW,EAAXA,MAEb,OADAC,QAAQC,IAAIF,GAER,sBAAKF,UAAU,QAAf,UACI,qBAAKK,IAAG,UAAKH,EAAMI,QAAQC,WAAWC,KAAKC,KAAOC,IAAI,KACtD,mBAAGV,UAAU,QAAb,mBAAyBE,EAAMI,QAAQK,SACvC,qBAAKX,UAAU,WAAf,SACI,mBAAGA,UAAU,OAAb,mBAAwBE,EAAMI,QAAQM,qBHUvCC,EAfA,SAAC,GAAY,IAAVC,EAAS,EAATA,IACd,IACIX,QAAQC,IAAI,YAAaU,EAAIC,OAC7BhC,EAAS+B,EAAIC,MAAMC,KAAI,SAACC,GAAD,OACnB,cAAC,EAAD,CAAOf,MAAOe,OAErB,MAAMC,IAGP,OACE,qBAAKlB,UAAU,YAAf,SACGjB,K,OIPToC,EAAOC,SACP,IACIC,EA0BWC,MAzBf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACEC,GADF,WAEbC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACUC,IADV,OACVC,EADU,OAEhBJ,EAAUI,GAFM,2CAAH,qDAIfC,KACG,IACH,IAAMF,EAAW,uCAAG,4BAAAD,EAAA,sEACAI,MAAM,GAAD,OAZE,sDAYF,2DAA6EC,4CADlF,cACZC,EADY,gBAEJA,EAAIC,OAFA,cAEjBZ,EAFiB,yBAGXA,EAAKN,OAHM,2CAAH,qDAMnB,OACE,sBAAKf,UAAU,MAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,gDACA,cAAC,EAAD,CAAQc,IAAKO,QCjBFa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2ac3fc7c.chunk.js","sourcesContent":["import Video from './Video';\nlet videos;\nconst Videos = ({ set }) =>{\n    try{\n        console.log(\"Set=====>\", set.items);\n        videos = set.items.map((k)=>(\n            <Video video={k}/>\n        ))\n    }catch(error){\n\n    }\n    return (\n      <div className=\"video-set\">\n        {videos}\n      </div>\n    )\n}\nexport default Videos;","import React from 'react';\nimport YouTube from 'react-youtube';\n\nclass Example extends React.Component {\n  render() {\n    const opts = {\n      height: '390',\n      width: '100%',\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 1,\n      },\n    };\n\n    return <YouTube videoId=\"2g811Eo7K8U\" opts={opts} onReady={this._onReady} />;\n  }\n\n  _onReady(event) {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n  }\n}\nexport default Example;","const Header = () =>{\n    return (\n        <p className=\"big\">VIDEO<span>gallery</span></p>\n    )\n}\nexport default Header;","const Video = ({ video }) =>{\n    console.log(video);\n    return (\n        <div className=\"video\">\n            <img src={`${video.snippet.thumbnails.high.url}`} alt=\"\"/>\n            <p className=\"title\">{`${video.snippet.title}`}</p>\n            <div className=\"date-set\">\n                <p className=\"date\">{`${video.snippet.publishedAt}`}</p>\n            </div>\n            \n        </div>\n    )\n}\nexport default Video;","import ReactYoutube from './reactyoutube.js';\nimport { useEffect, useState } from 'react';\nimport dotenv from 'dotenv';\nimport Header from './components/Header';\nimport Videos from './components/Videos'\n\ndotenv.config();\nconst YOUTUBE_PLAYLIST_ITEMS = \"https://www.googleapis.com/youtube/v3/playlistItems\";\nlet data;\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  useEffect(()=>{\n    const getVideos = async()=>{\n      const fetchedData = await fetchVideos();\n      setVideos(fetchedData);\n    }\n    getVideos();\n    }, []); \n    const fetchVideos = async()=>{\n      const res = await fetch(`${YOUTUBE_PLAYLIST_ITEMS}?part=snippet&playlistId=PLAE2A24C2B39F82E0&key=${process.env.REACT_APP_GOOGLE_APIS_KEY}`);\n       data = await res.json();\n      return data.items;\n    };\n\n  return (\n    <div className=\"App\">\n    <Header />\n    <ReactYoutube />\n    <h1>Playlist Items</h1>\n    <Videos set={data}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}